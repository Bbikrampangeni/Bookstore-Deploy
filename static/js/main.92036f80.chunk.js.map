{"version":3,"sources":["AddBook.js","App.js","reportWebVitals.js","index.js"],"names":["AddBook","props","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","_useState3","title","author","year","isbn","price","_useState4","book","setBook","handleClose","inputChanged","event","objectSpread","defineProperty","target","name","value","react_default","a","createElement","Button","variant","color","onClick","Dialog","DialogTitle","DialogContent","TextField","onChange","margin","label","fullWidth","DialogActions","addBook","App","books","setBooks","useEffect","fetchBooks","fetch","then","response","json","data","addKeys","catch","err","console","error","keys","valueKeys","values","map","index","className","AppBar","position","Toolbar","Typography","noWrap","src_AddBook","newBook","method","body","JSON","stringify","style","height","width","main","rowData","sortable","filter","field","headerName","cellRendererFramework","params","IconButton","id","concat","size","Delete_default","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.92036f80.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nfunction AddBook(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [book, setBook] = useState({ title: \"\", author: \"\", year: \"\", isbn: \"\", price: \"\" });\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n      props.addBook(book);\r\n      handleClose();\r\n  }\r\n\r\n  const inputChanged = (event) => {\r\n    setBook({ ...book, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleOpen}>\r\n        ADD BOOK\r\n      </Button>\r\n      <Dialog open={open}>\r\n        <DialogTitle>New book</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            name=\"title\"\r\n            value={book.title}\r\n            onChange={inputChanged}\r\n            margin=\"dense\"\r\n            label=\"Title\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            name=\"author\"\r\n            value={book.author}\r\n            onChange={inputChanged}\r\n            margin=\"dense\"\r\n            label=\"Author\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            name=\"year\"\r\n            value={book.year}\r\n            onChange={inputChanged}\r\n            margin=\"dense\"\r\n            label=\"Year\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            name=\"isbn\"\r\n            value={book.isbn}\r\n            onChange={inputChanged}\r\n            margin=\"dense\"\r\n            label=\"Isbn\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            name=\"price\"\r\n            value={book.price}\r\n            onChange={inputChanged}\r\n            margin=\"dense\"\r\n            label=\"Price\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleSave}>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBook;","import React, { useState, useEffect } from \"react\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport Appbar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AddBook from \"./AddBook\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport TodoTable from \"./TodoTable\";\r\nimport \"./App.css\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  const fetchBooks = () => {\r\n    fetch(\r\n      \"https://bookstore-fa515-default-rtdb.europe-west1.firebasedatabase.app/booklist/books/.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => addKeys(data))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  //Add keys to the todo objects\r\n  const addKeys = (data) => {\r\n    const keys = Object.keys(data);\r\n    const valueKeys = Object.values(data).map((book, index) =>\r\n      Object.defineProperty(book, \"id\", { value: keys[index] })\r\n    );\r\n    setBooks(valueKeys);\r\n  };\r\n\r\n  const addBook = (newBook) => {\r\n    fetch(\r\n      \"https://bookstore-fa515-default-rtdb.europe-west1.firebasedatabase.app/booklist/books/.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newBook),\r\n      }\r\n    )\r\n      .then((response) => fetchBooks())\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const deleteBook = (id) => {\r\n    fetch(\r\n      `https://bookstore-fa515-default-rtdb.europe-west1.firebasedatabase.app/booklist/books/${id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    )\r\n      .then((response) => fetchBooks())\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Appbar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" noWrap>\r\n            Bookstore\r\n          </Typography>\r\n        </Toolbar>\r\n      </Appbar>\r\n      <AddBook addBook={addBook} />\r\n      <div\r\n        className=\"ag-theme-material\"\r\n        style={{ height: 400, width: 1100, margin: \"auto\" }}\r\n      >\r\n        <AgGridReact rowData={books}>\r\n          <AgGridColumn sortable={true} filter={true} field=\"title\" />\r\n          <AgGridColumn sortable={true} filter={true} field=\"author\" />\r\n          <AgGridColumn sortable={true} filter={true} field=\"year\" />\r\n          <AgGridColumn sortable={true} filter={true} field=\"isbn\" />\r\n          <AgGridColumn sortable={true} filter={true} field=\"price\" />\r\n          <AgGridColumn\r\n            headerName=\"\"\r\n            field=\"id\"\r\n            width={90}\r\n            cellRendererFramework={ params => (\r\n              <IconButton\r\n                onClick={() => deleteBook(params.value)}\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            )}\r\n          />\r\n        </AgGridReact>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  \r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}